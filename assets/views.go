// Code generated by go-bindata.
// sources:
// assets/add.html
// assets/footer.html
// assets/header.html
// assets/index.html
// assets/view.html
// assets/views.go
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsAddHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\x41\x8b\xd6\x40\x0c\x86\xef\xfe\x8a\x90\x7b\xed\x1f\x98\x0e\xb8\x28\x22\x78\x52\x3c\x4b\xfa\x25\xb5\x83\xed\x64\x48\xd3\x75\x97\xa1\xff\x5d\xda\xed\x7e\xbb\x2a\x0a\xb2\xb7\xd0\xa4\xcf\xfb\xc0\xbc\xb5\x02\xcb\x90\xb2\x00\x12\x33\xc2\xb6\xbd\x02\xa8\x15\x5c\xe6\x32\x91\x0b\xe0\x28\xc4\x62\xe7\x26\x94\x18\x08\x46\x93\xa1\xc3\x5a\xe1\xf5\x0d\x2d\xf2\xe5\xd3\x47\xd8\x36\x8c\x21\xc1\x65\xa2\x65\xe9\x70\x20\x18\xa8\x21\x33\xfd\xd1\x4c\x32\x38\x02\x59\xa2\x66\x4c\xcc\x92\x3b\x74\x5b\x05\x63\x68\x53\x84\xf7\x0a\x3d\x5d\xbe\x83\x2b\xa4\xcc\x72\x17\x5a\x8a\xa1\x2d\x71\x8f\x1a\xd4\x66\x98\xc5\x47\xe5\x0e\x8b\x2e\x8e\xfb\x67\x80\xc0\xe9\xf6\x9a\xa4\x36\x37\xdf\x4c\xd7\x72\x2e\x01\xc2\x44\xbd\x4c\x30\xa8\x75\x98\x18\xe3\x8d\x92\x31\x7c\x78\x1b\xda\x63\x71\x3d\x4b\xb9\xac\x0e\x7e\x5f\xa4\x43\x97\x3b\xc7\x5f\x98\x17\xcd\x6e\x3a\x21\x24\x3e\x30\x90\x69\x96\x87\xa9\x4c\x74\x91\x51\x27\x16\xeb\xf0\x91\xfe\xe8\xd6\x72\xba\xfd\x6f\xcd\xc5\xc9\xfc\x2b\x93\x0b\xc6\xcf\xfb\x0c\xfb\xfc\x2f\xe1\xe3\xf6\xef\xc2\xcf\x80\xa7\xf8\xf3\x88\x17\x98\x4a\xe6\x13\xf2\x2e\xf3\x4b\x2d\xaf\xb0\xd3\xf1\x09\xfe\x87\x61\xbf\xba\x6b\x3e\xb1\xcb\xda\xcf\xe9\xe9\xbd\x7a\xcf\xd0\x7b\x6e\x8a\xa5\x99\xec\x1e\xe3\x1b\xe6\xd0\x3e\xfc\x71\x14\xa9\xdd\xa3\xe3\xef\xbd\x1e\x54\xfd\xec\x75\xad\x20\x99\x61\xdb\x7e\x06\x00\x00\xff\xff\xc6\xfe\x50\xc4\x0e\x03\x00\x00")

func assetsAddHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsAddHtml,
		"assets/add.html",
	)
}

func assetsAddHtml() (*asset, error) {
	bytes, err := assetsAddHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/add.html", size: 782, mode: os.FileMode(420), modTime: time.Unix(1480513685, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsFooterHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\xcf\xc1\x6a\x84\x30\x10\x06\xe0\xbb\x4f\x31\xe4\xae\x69\x0b\x6d\xb7\x25\xe6\xd0\x87\xe8\xb5\x8c\x66\xb2\xa6\x8d\x89\x24\x23\x61\x11\xdf\xbd\xa8\xcb\x2e\xec\x5c\xe6\xf0\xf3\x7f\xf0\x2f\x0b\x18\xb2\x2e\x10\x08\x1b\x23\x53\x12\xb0\xae\x15\x00\x80\xca\x7d\x72\x13\x43\x4e\x7d\x2b\x06\xe6\x29\x7f\x4a\x39\x67\x6a\x6c\x0c\x8c\x85\x72\x1c\xa9\xe9\xe3\x28\x4f\xcf\x2f\x6f\xaf\xef\x27\xf3\xf1\xd4\xfc\x66\xa1\x95\x3c\x8a\xfa\x50\x26\xfd\x75\x01\x85\x30\x24\xb2\x77\xa7\x94\xd2\xe4\x12\x93\xe9\x88\x71\x57\x04\x30\xa6\x33\x71\x2b\x7e\x3a\x8f\xe1\x4f\xe8\x5b\xae\x24\x6a\xa8\xe1\xf0\x1e\xa5\xb3\xe3\x61\xee\x76\xe2\x56\x90\x9c\xc8\xfb\x58\x77\x73\x0a\x26\x96\x70\xb5\xef\xf4\x4e\x6d\xf7\xed\xa8\x40\x0c\xa0\x1c\xf4\x1e\x73\x6e\x85\x45\xb0\x58\x1f\x6a\x8d\x9e\xb7\x41\xee\xba\x45\xa2\x56\x72\xd2\x95\x92\x5d\x34\x97\xed\x0f\x3c\x7a\x5d\x2d\x0b\x50\x30\xb0\xae\xff\x01\x00\x00\xff\xff\x73\x31\x31\x8b\x4e\x01\x00\x00")

func assetsFooterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsFooterHtml,
		"assets/footer.html",
	)
}

func assetsFooterHtml() (*asset, error) {
	bytes, err := assetsFooterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/footer.html", size: 334, mode: os.FileMode(420), modTime: time.Unix(1480463928, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsHeaderHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x90\x4d\xcf\xd2\x40\x14\x85\xf7\xfd\x15\xd7\xd9\x9a\xb7\x13\x2d\x11\x62\xda\x26\xa0\x28\xca\x02\x02\x48\xc2\x72\x3a\x73\xe9\x8c\xcc\x07\x99\x3b\x15\x6b\xd3\xff\x6e\x80\xe8\xbb\xba\xb9\xcf\x39\x9b\xf3\x0c\x03\x28\x3c\x1b\x8f\xc0\x34\x0a\x85\x91\xc1\x38\x66\xe5\x9b\xcf\x9b\x4f\x87\xd3\x76\x09\x3a\x39\x5b\x67\xe5\xbf\x83\x42\xd5\x19\x40\x99\x4c\xb2\x58\x1f\x22\x5a\x1b\x60\xd1\x45\xaf\xc2\xcd\x97\xfc\x89\xef\x05\x87\x49\x80\xd4\x22\x12\xa6\x8a\x75\xe9\xfc\x32\x63\xc0\x1f\x91\x35\xfe\x02\x11\x6d\xc5\x28\xf5\x16\x49\x23\x26\x06\x3a\xe2\xb9\x62\x3a\xa5\x2b\x7d\xe4\xdc\x89\xdf\x52\xf9\xbc\x09\x21\x51\x8a\xe2\x7a\x7f\x64\x70\xfc\x3f\xe0\x45\x5e\xe4\x53\x2e\x89\x5e\x59\xee\x8c\xcf\x25\x11\xcb\x00\x00\x8c\x4f\xd8\x46\x93\xfa\x8a\x91\x16\xc5\x6c\xf2\xb2\x38\x9e\x8c\xd9\x7f\xfb\x82\xeb\x77\xea\xab\xfb\xbe\x9b\x5f\x7a\xd9\xad\xe6\xab\x5d\x5b\xbc\xdf\xb8\x1f\xf2\x76\x9b\x06\x5f\xec\x4e\xaa\x9d\x1c\xc5\xdb\xad\xdb\x1f\xe8\x0f\x5f\x7f\x98\xfd\x6a\xd4\xf2\xa7\x9e\x74\x0c\x64\x0c\x44\x21\x9a\xd6\xf8\x8a\x09\x1f\x7c\xef\x42\x47\xac\xce\x4a\xfe\x54\x53\x36\x41\xf5\x20\xad\x20\xaa\x98\x0c\x3e\x09\xe3\x31\xb2\xc7\xee\x26\xde\x05\x0c\x03\xa0\x57\x30\x8e\x7f\x03\x00\x00\xff\xff\x59\xe7\xf9\x64\x7a\x01\x00\x00")

func assetsHeaderHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsHeaderHtml,
		"assets/header.html",
	)
}

func assetsHeaderHtml() (*asset, error) {
	bytes, err := assetsHeaderHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/header.html", size: 378, mode: os.FileMode(420), modTime: time.Unix(1480463928, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\xdd\x8a\xdb\x3c\x10\xbd\xff\x9e\x62\x10\xdf\xad\xa3\x74\x2f\x7a\xe5\x18\xf6\xaf\x50\x28\xa5\xf4\xe7\x01\x26\x99\x71\x2d\x90\x25\x33\x9a\x6d\x0b\x46\xef\x5e\x64\x3b\xd9\x6c\x36\x1b\xd2\x1b\xa3\xf9\x39\x3a\x9e\x73\x24\x8d\x23\x10\xb7\x2e\x30\x18\x17\x88\xff\x18\xc8\xf9\x3f\x80\x71\x04\xe5\x7e\xf0\xa8\x0c\xa6\x63\x24\x96\xa5\x52\x0f\x4d\x8d\xd0\x09\xb7\x1b\x33\x8e\xb0\xba\xc3\xc4\x3f\xbe\x7e\x82\x9c\x91\xc8\x34\xb5\x83\x9d\xc7\x94\x36\xa6\x45\x68\xb1\x1a\xfc\x53\x32\x4d\x6d\x5d\x03\xb7\x44\xa0\xc2\xde\x47\xd8\x46\x14\xaa\x2d\x36\xb5\x1d\x9a\xb2\xa9\xe2\xd6\xf3\x1e\x39\x07\xd3\xb7\xda\x46\x21\x16\xa6\x25\x4c\x2a\x6e\x60\x32\x05\x54\x60\x32\x2f\xca\xb2\x6b\x6a\xab\xdd\x71\x7c\x57\x58\x20\x60\xcf\xa7\x95\x6f\x8a\xa2\x40\xa8\xaf\x2a\x8f\x81\xce\xe6\xef\x51\x28\xd5\x5b\x01\xdb\xdc\xc7\x7e\xf0\xac\x4c\x60\xe1\x7b\x54\xf4\xa7\xbd\x5f\xa2\x0b\x7a\x6d\xf3\xed\x4e\x5d\x0c\xe9\x39\x5d\xdb\xfd\x54\xe3\x08\x82\xe1\x27\xc3\x6a\x9a\x24\x4d\xfa\x9f\xcc\x5d\x02\x7a\xe1\xc8\xff\x47\x96\xfc\x72\xfc\xdb\x16\x97\x3e\x3e\x40\xce\xaf\xdd\xf1\x2e\x70\xb5\xeb\x50\xd4\x00\x8a\xc3\xaa\x73\x44\x1c\x36\x46\xe5\x89\x67\xdb\x66\x97\x94\x5e\x12\x96\x3d\x3f\x63\xcf\x90\xf3\xf9\xe2\x03\x2a\x4f\x2a\xaf\x3e\x44\xe9\x51\xc1\xac\x6f\xaa\xf5\xbb\xea\x66\xbd\x7e\x6f\x2e\xa2\x1e\x03\xfd\x13\x66\x72\xe6\x59\xe6\x9c\xc1\xc2\x21\xff\x26\x6a\xf6\xe8\x0c\x6c\x2e\x9c\xc5\x1d\x02\x80\xb7\x04\x17\x6e\x85\x53\x77\x49\xf3\xa5\xe5\xa2\xe0\x57\x30\x11\x97\x1f\xbf\x44\xa4\x82\xd7\xd2\x1c\xcf\x3a\x9d\x3f\x80\xfd\x09\xe4\x40\xcb\xc5\xb7\xd3\x15\x6c\x4e\x5f\x87\x36\x46\x5d\x5e\x87\x43\xfb\xdf\x00\x00\x00\xff\xff\xd6\x82\x22\xb2\x56\x04\x00\x00")

func assetsIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsIndexHtml,
		"assets/index.html",
	)
}

func assetsIndexHtml() (*asset, error) {
	bytes, err := assetsIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/index.html", size: 1110, mode: os.FileMode(420), modTime: time.Unix(1483709450, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsViewHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x4f\x6f\xe3\xb6\x13\xbd\xef\xa7\x18\xe8\x62\x19\xb6\x24\xc7\xbf\x5f\x5a\xc4\xb1\x0c\x74\x93\xdd\xa2\x40\x8b\x06\x6d\xf6\x50\x04\x39\x8c\xc5\x91\x45\x2f\x4d\x0a\x24\xe5\x3f\xf0\xea\xbb\x17\xd4\x3f\x4b\x8d\x53\xf4\xb0\x07\x03\x34\xe7\xcd\xbc\xc7\xa7\xe1\x48\xe7\x33\x30\x4a\xb9\x24\xf0\xf6\x9c\x0e\x1e\x94\xe5\x07\x80\xf3\x19\x2c\xed\x72\x81\x96\xc0\xcb\x08\x19\xe9\x26\xb2\xcc\x57\x4b\x84\x4c\x53\x1a\x7b\xe7\x33\x84\x1f\xd1\xd0\x97\x3f\x7e\x85\xb2\xf4\x56\x4b\x0e\x89\x40\x63\x62\x2f\x45\x48\x31\x40\xad\xd5\x21\x10\x94\x5a\x0f\x50\x73\x0c\x32\xce\x18\xc9\xd8\xb3\xba\x20\x6f\xb5\x8c\xf8\x0a\x7e\x56\xb0\xc6\xe4\x2b\x58\x05\x5c\x32\x3a\x2e\x23\x5c\x2d\xa3\x7c\xe5\xa8\x18\xdf\xc3\x81\x33\x9b\xc5\xde\x7c\x36\xcb\x8f\x1e\x64\xc4\x37\x99\x6d\xff\x3a\x10\xc0\x32\x41\xb9\x47\x03\x9c\xc5\xde\xba\xd0\x92\xa9\x83\x7c\xc8\x50\x5b\xc7\x50\xc7\xaa\x6a\x11\xe3\xfb\x6a\x61\x12\xcd\x73\x0b\x46\x27\xb1\x97\x59\x9b\x9b\x45\x14\x25\x4c\x6e\x4d\x98\x08\x55\xb0\x54\xa0\xa6\x30\x51\xbb\x08\xb7\x78\x8c\x04\x5f\x9b\xa8\xaa\x17\x6e\x4d\x34\x0f\xff\x1f\xce\x9a\xbf\xeb\x42\x32\x41\xe1\x8e\xcb\x70\x6b\x1c\x59\x5d\xb8\xc7\x51\x0b\xdc\xa3\x86\xc4\x1e\x21\x06\xa6\x92\x62\x47\xd2\x86\x1b\xb2\x9f\x04\xb9\xe5\xc7\xd3\x2f\xcc\xff\x87\xee\xf1\x7d\x97\x67\x95\x45\xf1\xa4\xb8\xb4\x06\x62\xa8\x0c\x57\xa8\x59\xd8\x6c\x95\xe5\x05\x9a\x57\x5b\x7f\xe6\x24\xed\x13\xe9\x47\x3c\xb9\x84\x2a\xea\x9e\x67\x00\x1a\xe5\x86\xda\xfc\x07\xd4\xec\x49\xab\x8d\x26\x63\x20\xa8\x9e\x6c\x8b\x84\xf0\x11\x2d\x85\x9f\x95\xde\xa1\x05\x67\xf5\x0f\xc1\xec\x26\x98\xcd\x5d\x07\x2c\x2a\x40\xc7\x3e\xed\xd5\x27\xc9\xba\x4a\x3d\x59\x0c\x4f\x4e\xfa\xcb\x5b\x25\x8e\x66\x48\x5e\x75\xd4\x75\x62\xef\x3d\xaa\xd7\x0b\xd5\xc0\x45\x88\x41\xd2\x01\xaa\xb5\x9f\xd8\xe3\xb4\x33\xc3\x9e\x72\x5a\xc0\x48\x70\x49\xa3\xb6\x2a\x43\x8b\x8b\x0e\x01\x20\x70\x4d\xc2\x2c\x2a\xf5\xd3\x6e\xd7\xa1\x0c\x59\xb3\xe8\x8e\x53\x29\xea\xad\x01\x52\x2e\xc4\x02\x5c\x87\x4f\x07\xfb\xae\xcb\x37\x5a\x15\x92\x3d\x28\xa1\xf4\x02\x3c\xbd\x59\xa3\xff\xe3\xed\xf4\xe6\x6e\x5e\xfd\x66\xe1\x7c\xec\x0d\x93\x2a\x19\x0b\x18\x7d\x32\x96\xef\xd0\x12\x1b\x0d\xe3\xb5\x6c\xd7\x4d\x2d\xe0\x11\x2d\xfa\xe3\x3e\xaa\x9c\x7e\x2f\xad\xf3\xdb\xdb\x29\xdc\xdd\x4d\xe1\xe6\x7f\xf3\x29\xfc\x8b\xdc\x9f\x12\x5b\xa0\x78\x4f\x6b\x1d\xbd\x22\xb4\x5b\xbf\x7e\x18\x48\x2f\x9b\x0b\x91\x16\x32\xb1\x5c\xc9\x2b\x07\xee\x0e\x46\xed\xbe\xeb\xb9\xa6\x37\x00\xf2\xf6\x42\xf4\xef\x53\x54\x3d\xdd\x50\x90\xdc\xd8\xac\x45\xba\xb1\xf7\xec\x40\x43\x70\x1b\x4e\x95\x06\x9f\x43\x0c\xb3\x7b\xe0\xb0\x1c\x54\x00\x3e\x99\x8c\x7b\x0e\x77\x52\x5e\xf8\xab\xab\xd6\x55\x0e\x1a\x3d\xf7\x1d\x74\xc0\xfa\x2e\xae\x35\x48\x93\x2d\xb4\xbc\xd4\xaf\xe3\xe5\x1b\x8f\xfa\x46\x77\xba\xb0\xda\x1c\xb8\xf3\x1d\xcf\x5c\x0f\xa1\x67\xda\xe5\x10\xbf\x9d\x48\x2f\x2e\xf5\x85\xbf\xbe\xc2\xb7\x6f\x30\xbb\x1c\xbf\xd6\x74\xc5\xa6\xae\xda\x7f\xb0\xea\x0a\x96\xa7\xe0\x73\xf3\xac\x18\x9e\xfc\x86\x7a\x3c\x1e\xdc\x81\xb5\x26\xfc\x7a\x49\x28\xaf\x3b\x5d\xeb\xbb\x6a\xf3\xa5\xbc\xa5\x4b\xe9\x7a\xf0\x59\xfa\x7d\xbd\x6d\xe6\x90\x1b\x76\xfe\xf8\xbe\x17\xdf\x29\x69\x33\x88\xc1\x1f\xcd\x46\x30\x69\xe1\xee\xd5\xf0\xe5\xf9\xe1\x37\x17\xf4\xc7\x30\x81\x9b\x71\x68\x04\x4f\xc8\x0f\xe6\x83\x74\x56\xf5\xf3\xd5\xe4\x9a\xeb\x9d\xbc\x13\xa1\x76\xaf\xa2\x41\xc6\xe7\x42\x88\xbf\x08\xf5\x45\x61\x73\x72\x07\x83\x38\xae\xb3\x26\xe0\x05\x1e\x4c\x1a\xe5\xed\x3f\xd6\x36\x68\xf5\x79\xd0\x7b\x09\x0e\x3e\x22\x52\xa5\x6c\xf3\x11\x71\x3e\x57\x03\xbc\x2c\xff\x0e\x00\x00\xff\xff\xad\x8c\x06\xb7\x7c\x08\x00\x00")

func assetsViewHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsViewHtml,
		"assets/view.html",
	)
}

func assetsViewHtml() (*asset, error) {
	bytes, err := assetsViewHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/view.html", size: 2172, mode: os.FileMode(420), modTime: time.Unix(1483709366, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsViewsGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x99\x4b\x6f\x23\xc7\x15\x85\xd7\xec\x5f\xd1\x16\x60\x83\x0c\x14\xa9\xdf\x0f\x01\xb3\x88\x5f\xf0\x2c\x62\x03\x8e\xb3\x4a\x05\x46\x75\x77\x95\x4c\x44\x22\x15\x92\xb2\x6b\x66\x30\xff\x3d\xf8\xea\xde\x16\x29\x8d\xfc\x12\x06\xc8\x82\xa6\xd8\xd3\x55\x75\x9f\xe7\x9c\x5b\xbe\xbc\x4c\xbf\xd8\x4e\x2e\xbd\x76\x1b\xb7\xb3\x07\x37\xa5\xc3\x9b\xf4\x7a\xfb\xd7\x61\xbd\x99\xec\xc1\x5e\x24\x97\x97\xe9\x7e\x7b\xbf\x1b\xdd\xfe\x8a\xbf\xed\x7e\xef\x0e\xfb\x4b\x3b\x4d\x17\x3f\x1d\x6e\x6f\x4e\x1e\xf9\xed\xf6\xe0\x76\x4f\x9f\xfe\xe4\xec\xf4\xe1\xd3\xf5\x66\x72\xe1\xe9\xc3\x9f\xd7\xee\x97\xe7\x9e\xed\x2f\xae\xb7\x3c\xfa\xf2\xbb\xf4\xdb\xef\x7e\x48\xbf\xfa\xf2\xf5\x0f\x9f\x24\xc9\x9d\x1d\xff\x63\xaf\x9d\xbe\x98\x24\xeb\xdb\xbb\xed\xee\x90\x2e\x93\xc5\xd9\xf0\xe6\xe0\xf6\x67\xc9\xe2\x6c\xdc\xde\xde\xed\xdc\x7e\x7f\x79\xfd\x76\x7d\xc7\x03\x7f\x7b\xe0\x6b\xbd\x95\xff\x5e\xae\xb7\xf7\x87\xf5\x0d\x3f\xb6\x71\xc1\x9d\x3d\xfc\x74\xe9\xd7\x37\x8e\x3f\x78\xb0\x3f\xec\xd6\x9b\xeb\xf8\x6f\x87\xf5\xad\x3b\x4b\x56\x49\xe2\xef\x37\x63\xaa\xf1\xf9\xde\xd9\x69\xc9\x1f\xe9\xbf\xfe\xcd\xb1\xe7\xe9\xc6\xde\xba\x54\x96\xad\xd2\xe5\xfc\xd4\xed\x76\xdb\xdd\x2a\x7d\x97\x2c\xae\xdf\xc6\x5f\xe9\xd5\xab\x14\xab\x2e\xbe\x75\xbf\x7c\x1f\x63\xb4\x8c\x66\xf3\xfb\xf3\x7b\xef\xdd\x2e\x6e\xbb\x5a\x25\x8b\xb5\x8f\x0b\x3e\x79\x95\x6e\xd6\x37\x6c\xb1\xd8\xb9\xc3\xfd\x6e\xc3\xcf\xf3\xd4\xdf\x1e\x2e\xbe\x62\x77\xbf\x3c\x63\xa3\xf4\xd3\xff\x5e\xa5\x9f\xfe\x7c\x26\x96\xc4\xb3\x56\xc9\xe2\x7d\x92\x2c\x7e\xb6\xbb\x74\xb8\xf7\xa9\x9c\x23\x87\x24\x8b\x1f\xc5\x9c\x57\xe9\x7a\x7b\xf1\xc5\xf6\xee\xcd\xf2\xb3\xe1\xde\x9f\xa7\xd7\x6f\x57\xc9\x62\xbc\xf9\x6a\xb6\xf4\xe2\x8b\x9b\xed\xde\x2d\x57\xc9\xc7\xb2\x87\x6d\x64\xff\x5f\xd9\xc8\xed\x76\x62\xb7\x3e\x1c\xee\xfd\xc5\xe7\x98\xbe\x5c\x9d\xf3\x46\xf2\x3e\x49\x0e\x6f\xee\xb4\x02\x08\xf9\xfd\x78\x60\x97\xe8\x9f\xe6\x23\x59\xac\x37\x7e\x9b\xa6\xdb\xfd\xc5\xd7\xeb\x1b\xf7\x7a\xe3\xb7\x0f\xeb\x34\x85\xf3\xf3\x93\x1d\x62\x0e\xd3\x54\xd3\x98\x2c\xf6\xeb\xb7\xf1\xf7\x7a\x73\x68\xaa\x64\x71\x4b\xc3\xa4\x0f\x9b\xfe\x7d\x3b\xb9\xf8\xf0\x87\xf5\xad\x4b\x29\x93\x0b\xfe\xe2\x9c\x58\x2a\x4b\xbf\x7e\x7a\xd6\x2a\xfd\xd6\xde\xba\xe5\x4a\x4f\xe0\x4c\xf5\xd2\xaf\x2f\x38\x3d\x79\xff\x1b\x6b\xff\xb1\x7e\xcb\xda\x68\xcd\xe3\xa5\x18\xfa\x9b\x4b\xb1\x75\xb9\x3a\xb5\xfc\xf1\x06\xb8\xf6\x7b\x1b\xe0\xdc\x72\x75\x74\xf4\x83\x1d\xd4\xfb\x5f\xdf\xe4\xf5\xfe\xcb\xf5\x6e\xb9\x4a\x87\xed\xf6\xe6\x74\xb5\xbd\xd9\xff\x8e\xe7\x6f\xf6\xe2\xb8\xdb\x79\x3b\xba\x77\xef\x4f\x56\x6b\x49\x50\xe5\x3f\x0a\x28\xfc\x6d\x9a\xbe\x39\xdc\xde\xa4\xaf\xb4\x18\x96\x67\x26\xe4\xde\x84\x6e\x30\x21\xeb\x4c\xc8\x32\xfd\xf4\x26\x34\xce\x84\x4e\x9f\x79\x6f\x82\xad\x4c\xe8\x0b\x13\xaa\x5c\xde\x9f\x1a\x13\x2a\xde\x1d\x4d\xe8\x1a\x13\x9c\x37\xc1\xb3\xc6\x9a\xd0\x67\x26\xb4\x83\x09\x6e\x92\xfd\x7b\xf6\x71\x26\x0c\x9d\x09\x05\x9f\xc2\x84\xb6\x33\xa1\x2e\x4c\x28\x47\x13\xaa\xc1\x04\x6f\x4d\x28\x6a\x13\x86\xda\x84\xae\x94\xb5\x4d\x65\x42\xd5\x99\x30\x95\x26\xb4\xb5\x09\x7d\x6b\x82\xcd\xc5\x9e\x7a\x32\x61\xb2\xf2\x5e\xcb\xde\x83\x09\x85\x35\x21\xb3\x26\x0c\x85\x09\x43\x6b\xc2\x94\x89\xdd\x23\xb6\x0d\x26\x8c\x99\x09\xc3\x28\x67\x64\x85\x09\xe3\x20\xb6\xf2\x3e\x7e\xe6\xd8\x53\x9a\x30\xb2\xbe\x31\x61\x98\xe4\x3d\xdb\x99\x90\xd7\x26\xd4\xa3\x09\xae\x31\xa1\x2c\x4c\xe8\x73\x13\x32\x7c\xcc\xc4\xa7\xb1\x32\xa1\x29\x4c\x70\xad\x09\x45\x63\x42\x5f\x99\x90\x77\x12\xd7\x8a\xdf\xa5\xd8\x3e\x96\x26\xd4\xd8\x8d\x1f\xd8\x31\x99\x50\x4c\x26\x78\xd6\xd6\xe2\x6b\x85\xed\x9d\x09\x65\x63\x42\x37\x9a\x50\xb0\x2e\x37\xa1\xa9\x4d\xb0\x85\x7c\xbb\xde\x84\x96\xb3\x33\x39\x07\x1b\x79\x0f\xfb\x3d\xb1\xc9\x4d\xa8\x46\xb1\xb5\xec\xc4\x8f\xba\xd7\xf5\x8d\xfc\xdb\x38\x4a\x4e\xcb\xc1\x84\xb6\x32\xa1\xa6\x0e\x6a\x13\x9a\xd2\x84\x86\xfc\x94\x26\x74\x95\x09\xbe\x95\xb8\x96\x93\xc4\x7d\x70\x92\xa3\x62\xd0\xf8\x8e\x26\xb4\x85\x09\x79\x2b\xbe\x51\x03\xf8\x8a\x5f\x2d\xf5\xe2\x4d\xc8\xad\x09\x53\x25\x67\x53\x0f\x63\x2d\x7e\xe2\x33\xb5\x41\x4d\x15\x7c\x3b\xc9\x55\xd3\x9a\xd0\x65\x92\x33\x7c\xf5\xac\xb3\x72\x1e\x71\x29\x89\x91\x17\x3f\xa6\x56\xce\x67\x7d\x96\x4b\xfe\xaa\x4a\xf2\x17\x63\x90\x49\x7c\x62\x0d\x75\x12\x2f\x87\x6f\x93\xfa\x9f\x9b\xd0\x8e\x52\x93\xf9\x20\x75\x45\x0c\xb0\x1d\x9f\xa9\xcf\x81\xd8\x8d\x62\x2b\xf5\x56\x6b\x4f\x54\xa5\xd4\x25\x31\x1c\x5b\x79\x1e\xcf\x68\x4d\x18\x27\xe9\xa3\xd2\x4a\x6e\x0a\x6c\x77\x62\x0f\x75\xd7\xf4\x26\xf4\xe4\x98\xba\xee\xc5\x56\xf2\x40\x6d\xd5\xbc\xdf\x9a\x90\xd3\x5b\xf4\x47\x26\xcf\xe9\x31\xd7\x49\xff\xe1\xf3\x60\x25\xdf\x8d\x97\xf3\x88\xeb\x48\xbc\x46\xc9\x0f\x75\x47\x9d\x8e\xcd\xb1\x0f\xe8\x59\xbe\xe3\x3b\x5e\x6a\x91\x78\x78\xed\x63\xe2\xc7\xbb\xc4\xdf\xb6\x26\xf8\xce\x04\x5f\x0a\x1e\xe0\x17\xfe\x55\x56\x7a\x21\x2f\xa5\x76\x89\x3d\xef\x10\x2b\xf2\x6e\xbd\x09\x43\x26\xf5\xec\x73\xc1\x94\x88\x0f\xad\x09\x4d\x6e\xc2\xe0\xc5\xf6\x66\x90\x98\x0c\xb9\xf4\x23\xb1\xe7\x6c\x72\xce\x87\x1c\xb6\xfa\x6c\x52\x5c\x69\x14\x67\x2c\xf9\xe4\xbd\xd1\x84\xdc\x89\x0f\xe4\x0f\xbb\x78\x97\x7d\xf1\x91\x3c\xe6\x95\xc4\x78\xc2\xb6\x52\xde\xc5\x57\xf6\x67\x6d\x5d\x49\x1c\xd9\x8b\x3a\xb1\x93\xf4\x16\xfb\x63\xef\x34\x48\xde\xb3\xe6\x88\x93\xe0\x10\x1f\x62\x8b\x6f\x75\x26\x38\x40\x8d\x64\xe5\xfc\xde\xd9\x2c\x91\x1e\x81\xb0\x32\xf7\x73\x8a\x68\xe6\xf7\x13\x45\x95\x2c\x16\x8f\x31\xfc\x3c\x59\x2c\xce\x9e\x68\xcf\xb3\xf3\x64\xb1\x7a\x60\xd9\x47\xaf\x73\xd0\x5f\xe2\x93\xd3\x83\xa2\x30\x78\x50\x5f\xcf\x99\xf7\x7b\xe2\xe6\x41\x93\x44\x55\x71\xf5\xea\x29\x43\xbd\x83\xbb\xaf\xd2\x0f\x2d\x4d\x61\xe6\xab\xb4\xed\x8a\xf3\x14\x8e\xbd\x3a\xa5\xe0\x65\x55\x64\xab\xf8\x1c\xe6\xbc\x12\x66\xfd\xe7\x66\x1d\x96\x79\xd5\x65\x75\x5e\x36\x5d\x7d\x9e\x66\xab\xf7\xc9\xc2\x72\xe8\x67\x71\xfb\x77\xd1\x9d\xab\x54\xbd\xc2\xa2\xab\xf8\xdf\xf7\x0f\x21\xb5\xe7\xcf\xb0\xe2\xd7\x51\xa7\xbf\x98\x18\x21\x05\x8a\x33\x02\xb4\x15\xc0\xa4\xc1\xf3\x4c\x8a\x05\x82\x80\x9c\x2a\x2f\x40\xe3\x28\x44\x27\xcd\x4f\x63\x36\x93\x90\x15\xe4\x37\x17\x2e\x4d\x42\x93\x47\x32\x1c\x05\x34\x21\x29\xdb\x08\x68\x75\xbd\x80\x49\x51\x4a\x71\xe6\xb9\x80\x21\xc5\x0c\xd0\x8d\x0a\xa6\x14\xf3\x4c\x5a\x00\x08\x0d\xda\x7a\xf9\x9b\xc6\xe7\x7c\xc0\x70\xd0\x06\x8e\x36\x2b\x08\xb2\x37\x04\x00\x29\xd2\xc8\xd8\x0c\x09\xe2\x77\x04\x66\x6b\x42\x3b\x29\xf0\x97\x02\x84\x95\x93\x67\x00\x4f\xf4\xbd\x31\xa1\xe8\xe5\x4c\x00\xa3\xec\x05\xd8\x89\x53\x33\xaa\x78\xe0\x53\xeb\x3e\xa3\x34\x69\x6c\xfe\x52\x88\x95\xb8\x11\x5f\xec\x05\xe4\x00\x16\x1a\x17\x70\xf4\x0a\x2e\x10\x8b\xd7\x38\x41\x3c\x7d\x2d\xc2\x02\x90\x40\x58\xd0\x98\x90\x32\x0d\x4e\x73\x43\x12\x9c\x49\x9e\x88\x23\xfe\xb7\xad\x80\x1d\xc4\x3d\x15\x92\x27\x7c\x07\x40\xb1\x87\x9c\x03\x24\x35\x64\xa8\x39\x26\x1f\xa5\x12\x45\xa1\x00\x01\xd8\x77\x0a\xaa\xd8\x4e\x1e\x21\x56\xe2\xc7\x59\xf8\x4e\x8e\xa2\x00\xc8\x04\x7c\x00\xb2\x41\x41\x89\x7c\x3a\xe2\x48\xfc\x20\xed\x46\xc8\xa2\xa7\xce\x3a\x01\xee\xba\x13\x7b\xdb\x52\x88\x39\x0a\x8e\x46\x04\x01\x35\x13\xc5\x58\x25\xf9\xa0\xbe\x20\x70\xa7\xb5\x31\x8b\x36\x9b\x49\xbc\x79\x0f\x1b\xd8\x2b\xd6\x36\xc4\x5c\x4b\xce\x39\x87\x3e\x88\x75\x0d\x59\x3a\xa9\xd5\x4a\x6d\x04\xc0\x2b\x15\x25\xb5\x12\x12\xb1\x23\xfe\x10\x2b\x62\xa1\xac\x84\x20\x39\x3f\xf3\x92\x17\x00\xbd\x56\xe1\x43\x0d\x92\x1f\xe2\x39\xd7\x19\x7d\x45\x8e\x9e\x02\x2d\x36\xd2\x43\xa5\x8a\xd0\xca\x9d\xbe\xf7\x04\x68\x8f\x7d\xfd\x52\xac\x3d\xee\x70\x0a\xb7\x27\x73\xfd\x73\x88\x7b\x5c\xf4\xc7\x41\xf7\x03\x53\x3f\x32\xee\x3e\x32\x59\xa1\xb7\x2c\xab\x3f\x0d\xbd\x55\x53\xf6\x45\xf7\xf1\xa0\xf7\x9b\x38\xe8\xbf\x18\x7a\xd1\x78\xb4\x46\x35\xa9\x3e\x28\xa4\xbc\xe1\x7a\xca\x98\xb2\xa7\xe5\x81\x2d\x34\xe2\xd4\x8b\x86\xa4\x84\x81\x2c\xca\x0f\xe8\x44\xb7\x4f\xda\x46\x76\xd6\xf3\x56\x34\x33\x1f\x66\x10\x34\x11\xe5\x4d\x7b\xb7\x33\x24\xa8\x86\xce\x5a\xd1\x09\x68\x40\xce\x42\xd3\x44\xdd\xe3\xd5\xe6\x4c\xe1\x7c\x90\x96\x41\x4b\x62\x2f\x70\xd8\x0f\x02\x63\xb4\x64\xa6\x90\x47\x8b\x00\xc1\xc0\x08\xfa\x97\x16\xa2\xcd\xf1\xa9\xd7\x59\x00\x4d\x0f\xdc\xa1\x9f\xd9\x83\xfd\x7a\xa5\x19\xe8\x23\xce\x4c\x8d\xc4\xad\x54\xe8\xad\x55\x57\xb3\x06\xfd\x85\x86\xaf\xf0\xbd\x36\x21\xef\x25\x76\xbd\xea\x50\x20\x71\x6e\x7f\xe6\x35\x74\x3d\x36\x35\x99\xce\x16\xb5\x40\x71\xd4\x8a\x93\xb4\x38\x10\x0c\x35\x01\x3f\xcc\x11\xd8\x51\xf5\xe2\x3f\x10\xcd\x3e\xf9\x4c\x63\x56\xa0\xd8\xa9\x56\x65\x4e\x41\x73\xe3\x6f\x9c\x19\xf1\xb1\x16\x5d\x45\x0e\x62\x9e\x54\xdf\x12\x23\x66\x27\xb4\x31\xfb\x43\x55\xe4\x0e\xca\xc1\x57\x60\x93\x18\x37\x9a\x2f\xe0\x35\xc2\xf3\x24\xb0\x3e\xa9\x9d\x50\x26\x33\xa8\xef\x65\x2e\x24\x56\x85\x6a\xef\x4e\xf7\x01\xaa\xa0\x2f\x66\x51\xe0\x35\xda\xea\x85\xd6\x89\x41\xed\x64\x4f\xa8\x32\xce\x2f\xbd\x3c\x63\xd6\x02\x22\x3b\x95\x07\xd0\x7b\xae\x1a\x77\xae\x69\xfe\x8d\x7c\x4d\x27\x33\xa2\xd7\xf9\x09\xff\xf1\x0f\x7f\xa1\x4a\x34\xf6\xa0\xb3\x5c\xaf\xfb\x4e\x4a\xad\x50\x42\x57\xc8\x9c\x00\x2d\x38\x7c\x1e\xe4\x39\xb3\x1a\x75\xc1\x5c\x82\x2f\xac\x41\xdb\x42\xcd\xbc\x03\x0c\x53\x17\xf8\x1f\x25\x84\xe6\x9c\xf3\xa8\x9f\x5e\xa9\x9c\xf5\xc8\x09\x20\xd7\x62\xdf\x24\xf4\x81\x7d\x68\x63\xf6\xe4\x3b\x57\xca\x03\xea\xe3\x99\x3a\x0f\xc5\x19\x45\x67\x40\xf6\x8e\x54\xeb\x64\xde\xa1\xf6\x1b\xfd\xa6\xa7\xc9\x01\x7d\xca\x8c\xc3\xec\x41\x3c\xc8\x0d\x7b\x33\xa7\x51\x5f\xd4\x2d\xf3\x23\x33\xd9\xe8\x44\x5e\x78\xd5\xf1\xe4\x82\x19\xb1\xd2\x19\x1b\x1d\x3f\xeb\xf9\x68\x7b\x27\x67\x31\x1f\x64\x2a\x35\xa0\x14\xe2\xcb\x0c\x47\xde\xa8\xa7\xc9\x49\x1d\xcf\xbd\x09\x36\x40\xff\x50\x15\x73\x2a\xbe\x1d\x75\xfe\x91\xa6\x62\xee\x5b\xa9\xab\x58\x37\xf6\x37\x68\xea\x88\x81\x2f\xa5\xa9\xe3\x0e\xa7\x34\x75\x72\xd1\xfc\x1c\x4d\x1d\x17\xfd\x71\x9a\xfa\xc0\xd4\x8f\x4c\x53\x8f\x4c\x9e\x69\xaa\xed\xfe\xef\x34\xf5\x7a\x33\xb9\xf0\x62\x96\x42\x50\x52\x95\x4c\x9e\x54\x32\x5d\x12\x11\x3e\x13\xc1\x1e\xdf\x71\x82\x56\x3c\xa3\x0b\xad\x4e\xa9\x74\x47\xa1\x9d\x0b\x6a\x23\xd6\x99\xd2\x41\xde\x5a\x99\x0a\x74\x43\xc4\x51\x71\x54\x59\x14\x83\xbd\x8a\xd2\x49\x18\x12\xf4\x41\xa8\xd2\x55\x8d\x8a\xae\x4a\xa7\x7d\xd0\x8a\x2a\x85\xbd\x40\x07\xd0\x86\xee\x89\x37\x21\x85\x7c\x63\x0b\xd5\x5c\x2a\x9b\xf4\x2a\x18\x11\xb4\x08\x43\x10\x38\xfa\xd3\x0a\x0a\x96\x7a\x2b\x95\xb7\x12\x0b\x7c\xe4\x77\x14\xb0\xbd\x20\x28\xac\x80\x8d\x88\x69\x7c\x43\x3c\x7b\xbd\xa9\x89\x02\xb5\x11\x46\xe0\x0c\xc4\x2d\x7e\x82\xd6\x20\x0b\x8c\xcf\xb9\x93\xc6\x3c\x32\xfa\x20\x3e\xd2\x99\x08\x49\x98\x76\x2c\x65\x22\xe7\xbc\x41\x6f\x6e\x40\x4a\xc4\x74\x64\xd2\x4e\xd8\x75\xbe\x75\x04\xd5\x46\x1d\x02\x88\x01\x36\x80\xf2\x4d\x27\x37\x14\xb9\x15\x06\x88\x08\x53\x88\x1d\x8d\xde\x8a\x81\x04\x51\x1c\x57\x82\x14\x30\x23\x08\x32\xdf\xe6\x11\xef\x78\x0b\x61\x25\x2f\xec\xcf\xb9\xf9\xa4\xaa\xa4\xd0\xe1\xa7\x50\xe4\x2b\x45\x98\x13\xf3\x4c\x19\x3d\xde\x6a\x5a\xd9\xab\x50\x86\xc0\x46\xf2\x0b\x6b\x17\x56\xea\x0f\x96\xc6\x3e\xd0\x8b\xda\x9b\x7f\x53\x4b\xa3\x9e\x85\x4a\x69\x94\x29\x26\xbd\xa9\x03\x5d\x41\x38\x98\x1f\xb4\x64\x1d\xec\x15\xd1\xba\x96\x01\x2c\xde\xbc\xa8\xd2\x22\x57\xd4\x62\xa1\x43\x4f\x97\x0b\x1a\xbb\xb9\xb6\x72\xa9\x51\x14\x46\xbc\x5d\xd4\x9b\x14\x18\x98\x38\x3f\xe4\x7c\x14\xfb\x39\x8f\xc1\xa8\x1d\xf4\x46\xa6\x92\xb3\xe9\x93\x78\xe3\x56\x48\xed\xb6\x5a\xc7\x5e\x6f\x8a\x61\xa5\x98\x83\x51\x14\x45\x54\x3b\xca\x48\x30\x0f\x7b\x81\xf2\xf4\x6a\x64\x4a\xbd\x5d\xa3\x3e\x88\x01\xf1\xa7\xce\xc8\x27\x0c\xdc\x7b\x51\x76\xb5\xde\x00\xb7\x7a\x63\x3b\x6a\x2d\x93\x53\x6a\xd2\xeb\xcd\x27\xdf\x91\xfd\x1a\xbd\x0d\x74\xf2\x21\x46\xc4\x83\x18\x11\x63\x86\x55\xfa\xe3\x61\x50\xd3\xe1\x07\x56\x8c\x8a\x40\x6b\xd6\xaa\xca\xa4\x96\x72\xed\xc7\x4a\xd5\x5e\xa7\x43\x34\xe7\x35\x7a\x5e\xc4\x18\xa7\x03\x6b\x23\xb7\x96\xd4\x7c\x54\x54\x5e\x30\xc0\x6b\x0f\x53\x5f\x51\x69\x5a\x51\x1f\x7c\x63\x5f\xb4\xb7\x92\xf8\xd5\xaa\x32\xc9\x4b\x1c\xba\xad\x30\x29\x0a\x16\x75\xd1\xe8\xed\x38\xf9\xe3\xdf\xf1\x89\xdc\xe4\x7a\xf3\x15\x55\x77\x29\xef\x11\x1f\xea\x21\xb2\x62\xa3\x83\xac\xde\xd2\x16\x7a\x9b\x0f\x66\x91\x87\x78\x03\xa9\xfd\x0f\x0e\xb1\x6f\xaf\x2a\x23\xd7\x5c\x74\x8a\x33\xe0\x06\xf8\x32\x0f\xad\xf4\x64\xab\x8a\x13\x5f\xc1\x0b\xa7\xc3\xa9\x3b\x61\x6e\x54\x18\x31\x03\xbf\x07\x9d\x22\x6c\x25\x75\x11\xa7\x04\xbd\x88\x88\x0a\x5d\x95\xce\x8c\x57\xf8\x15\x15\x43\xa5\xb9\x1d\xc4\xb6\x41\xfb\x33\x57\xb5\x56\xe9\x0d\x31\x0a\x78\xce\x5d\x54\x5a\x7a\x03\x5a\x95\xa2\xce\xc0\xfa\x07\xee\x38\x51\x10\xf4\x3f\xf6\x14\xaa\xfa\x18\xae\xb3\xea\x57\x14\xc4\x03\x3d\xbd\x54\x40\x3c\x6c\x70\xaa\x1f\x8e\xff\x4b\xfa\x39\xf9\xf0\xb0\xe4\x8f\xab\x87\xa7\x66\x7e\x64\xf1\x70\x6a\xaf\x6a\x87\x3c\xcf\xb3\x3f\x2b\x1e\xfe\x17\x00\x00\xff\xff\xc3\x02\xd1\x0b\x00\x20\x00\x00")

func assetsViewsGoBytes() ([]byte, error) {
	return bindataRead(
		_assetsViewsGo,
		"assets/views.go",
	)
}

func assetsViewsGo() (*asset, error) {
	bytes, err := assetsViewsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/views.go", size: 20480, mode: os.FileMode(420), modTime: time.Unix(1483709621, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/add.html": assetsAddHtml,
	"assets/footer.html": assetsFooterHtml,
	"assets/header.html": assetsHeaderHtml,
	"assets/index.html": assetsIndexHtml,
	"assets/view.html": assetsViewHtml,
	"assets/views.go": assetsViewsGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"add.html": &bintree{assetsAddHtml, map[string]*bintree{}},
		"footer.html": &bintree{assetsFooterHtml, map[string]*bintree{}},
		"header.html": &bintree{assetsHeaderHtml, map[string]*bintree{}},
		"index.html": &bintree{assetsIndexHtml, map[string]*bintree{}},
		"view.html": &bintree{assetsViewHtml, map[string]*bintree{}},
		"views.go": &bintree{assetsViewsGo, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

